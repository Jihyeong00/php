버전 관리 시스템(형상 관리 시스템)
	원하는 시점(버전)으로 이동할 수 있으며, 각 버전별로 여러 개발자가 협업할 수 있는 최적의 환경을 제공하는 시스템

SVN 
	작업 내역 커밋 시 변경 사항과 히스토리가 즉시 서버로 전송되기 떄문에 관리가 용이하다.
	또한 간단한 설치와 사용방법으로 별도의 교육 없이도 초보자도 쉽게 사용할 수 있다.
	하지만 서버 간 버전 관리가 힘들다.

GIT
	SVN이 가지고 있던 클라이언트와 서버 간의 버전 관리 문제를 많이 보완해준 시스템이다.
	서버 뿐만 아니라 로컬에서도 버전 관리가 가능하며, 로컬이 서버가 될 수 있고, 서버도 로컬이 될 수 있다.
	브렌치라는 개념을 사용하여 개발자 마음대로 로컬 환경에서도 커밋과 버전 관리가 가능하다.

Git-Hub 
	Git으로 관리하는 프로젝트를 호스팅하는 사이트 중 하나이다.
	로컬 저장소에서 작업하던 파일을 다른 클라이언트와 공유하기 위한 서버이다.
------------------------------------------------------------------------------------------------------------------------------------------------------------

저장소의 종류
	-  로컬 저장소(local) : 개인 전용
	-  원격 저장소(remote) : 공유 전용

작업 트리(Work-Tree)
	폴더 또는 디렉터리를 의미한다. 

스테이징 - add 
	작업 트리를 커밋하기 전 작업 트리의 파일 상태를 기록하는 임시공간.
	커밋하기 전 반드시 커밋할 내용은 인덱스에 추가되어야 하며, 이를 스테이징이라고 한다.
	변경한 모든 파일을 커밋하지 않고, 원하는 파일만 골라서 스테이징을 하게 되면
	인덱스에 등록된 파일들만 커밋된다. 인덱스에 등록되지 않은 파일은 커밋이 될 수 없다.

커밋 - commit
	버전을 만들 때 사용하다.
	예를 들어 A와 B라는 파일을 하나의 버전으로 관리하고자 할 때 커밋을 사용한다.
	커밋 시 고유한 *커밋 아이디*가 부여되며, 원하는 버전으로 돌아갈 떄 커밋 아이디 중 앞 7글자를 사용한다.

체크아웃 - checkout
	원하는 버전 또는 브랜치로 이동하고 싶을 때 사용한다.
	체크아웃 명령어 뒤에 커밋 아이디 전체 또는 앞 7글자를 작성하면 해당 버전으로 이동하게 된다.

브랜치 - Branch
	한 개의 저장소를 여러 갈래로 나누어 관리할 수 있다.
	각각의 독립된 Branch에서는 각각의 개발자들이 기존 버전과 비교를 하거나
	버그를 테스트하는 등 협업을 위해 필요한 목적으로 사용할 수 있다.
	커밋을 통한 버전 관리는 한 가지의 커밋 히스토리 경로를 가지지만
	브랜치를 나누면 커밋 히스토리를 여러 경로로 나누어 사용이 가능해진다.

푸쉬 - push 
	로컬 저장소에 커밋한 파일들을 원격 저장소에 추가하는 명령어이다.
	
풀 - pull
	원격 저장소에 있는 파일들을 로컬 저장소로 전달받는 명령어이다.

클론 - clone
	원격 저장소에 있는 파일들을 새로운 로컬 저장소로 복사하여 전달받는 명령어이다.

	1. Git hub -> 다운로드 받기
	2. 내 PC 폴더 생성 -> Git bash -> clone 

----------------------------------------------------------------------------------------------------
master = 풀 푸쉬용 기본 브랜치
GIT은 공용서버뿐만 아니라 개개인이 서버를 가지고 있다. 래포지토리(저장소)
브랜치.  각각의 환경을 기억하고 저장  = 내가 관리 할 수 있는 버전들
작업하는 브랜치는 내버려둔다,
하나의 서버가 박살이 나면 다른사람 걸로 옮김 = 원격 저장소에 도착 = 문제없음

----------------------------------------------------------------------------------------------------
브랜치 
기존의 로컬환경을 새로운 로컬환경을 위해 새롭게 따는것 따라서 
	한 개의 처리경로를 여러 개의 처리 경로로 나눌 때 사용한다.
	보통 동시에 버전 관리를 해야할 때 사용하며,
	기본 브랜치는 master(최근에는 main으로 변경)이고, 각각의 브랜치는 현재 버전에 대한 커밋을 가리키고 있다.

	

   1. 커밋3 상태에서 hds 브랜치 생성

                 [master]
               ↓
      커밋1-------커밋2-------커밋3
               ↑
                  [hds]


   2. hds 브랜치에서 커밋4 진행
      
                		      [master]
              		          ↓
   	   커밋1-------커밋2-------커밋3-------커밋4
                    				↑
                      			          [hds]


   3. master 브랜치에서 커밋5 진행

                      	 [master]
                   	  ↓
               ┌--------커밋5
      커밋1-------커밋2-------커밋3
               └--------커밋4------커밋6
            		      ↑       ↑
	                   [test]     [hds]


=================================
로컬 > 커밋 > 푸쉬 > PR
